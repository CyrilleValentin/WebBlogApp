[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "blog_app",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "blog_app",
        "description": "blog_app",
        "detail": "blog_app",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "blog_app",
        "description": "blog_app",
        "isExtraImport": true,
        "detail": "blog_app",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "auth_app",
        "description": "auth_app",
        "isExtraImport": true,
        "detail": "auth_app",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "auth_app.models",
        "description": "auth_app.models",
        "isExtraImport": true,
        "detail": "auth_app.models",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "Blog",
        "importPath": "blog_app.models",
        "description": "blog_app.models",
        "isExtraImport": true,
        "detail": "blog_app.models",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "AppBlog.asgi",
        "description": "AppBlog.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "AppBlog.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-wc4sl78++i$))%hy^c@3ad03^^@jj_v2d2co8=3$ktt*&jh4x_'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-wc4sl78++i$))%hy^c@3ad03^^@jj_v2d2co8=3$ktt*&jh4x_'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'auth_app',\n    'blog_app',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'auth_app',\n    'blog_app',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'auth_app',\n    'blog_app',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'auth_app',\n    'blog_app',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'AppBlog.urls'",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "ROOT_URLCONF = 'AppBlog.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "WSGI_APPLICATION = 'AppBlog.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n 'default': {\n    'ENGINE': 'django.db.backends.mysql',\n    'NAME': 'django',\n    'USER': 'root', \n    'PASSWORD':'',\n    'HOST': '127.0.0.1', ",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "DATABASES = {\n 'default': {\n    'ENGINE': 'django.db.backends.mysql',\n    'NAME': 'django',\n    'USER': 'root', \n    'PASSWORD':'',\n    'HOST': '127.0.0.1', \n    'PORT': '3306', \n    }\n}",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'auth_app/static'),\n    os.path.join(BASE_DIR, 'blog_app/static')",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'auth_app/static'),\n    os.path.join(BASE_DIR, 'blog_app/static')\n]",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'auth_app/static'),\n    os.path.join(BASE_DIR, 'blog_app/static')\n]\nMEDIA_ROOT = BASE_DIR / \"blog_app/media\"",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'auth_app/static'),\n    os.path.join(BASE_DIR, 'blog_app/static')\n]\nMEDIA_ROOT = BASE_DIR / \"blog_app/media\"\nMEDIA_URL = \"/media/blog_app/\"",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'auth_app/static'),\n    os.path.join(BASE_DIR, 'blog_app/static')\n]\nMEDIA_ROOT = BASE_DIR / \"blog_app/media\"\nMEDIA_URL = \"/media/blog_app/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'auth_app/static'),\n    os.path.join(BASE_DIR, 'blog_app/static')\n]\nMEDIA_ROOT = BASE_DIR / \"blog_app/media\"\nMEDIA_URL = \"/media/blog_app/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"blog_app/media\"\nMEDIA_URL = \"/media/blog_app/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "MEDIA_URL = \"/media/blog_app/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "AppBlog.settings",
        "description": "AppBlog.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "AppBlog.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "AppBlog.urls",
        "description": "AppBlog.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('auth_app/', include('auth_app.urls')),\n    path('blog_app/', include('blog_app.urls')),\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "AppBlog.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "AppBlog.wsgi",
        "description": "AppBlog.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "AppBlog.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth_app.migrations.0001_initial",
        "description": "auth_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "auth_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth_app.migrations.0002_user_email",
        "description": "auth_app.migrations.0002_user_email",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth_app', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='user',\n            name='email',\n            field=models.EmailField(blank=True, default='', max_length=254, unique=True),\n        ),",
        "detail": "auth_app.migrations.0002_user_email",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth_app.migrations.0003_delete_user",
        "description": "auth_app.migrations.0003_delete_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth_app', '0002_user_email'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='User',\n        ),\n    ]",
        "detail": "auth_app.migrations.0003_delete_user",
        "documentation": {}
    },
    {
        "label": "AuthAppConfig",
        "kind": 6,
        "importPath": "auth_app.apps",
        "description": "auth_app.apps",
        "peekOfCode": "class AuthAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'auth_app'",
        "detail": "auth_app.apps",
        "documentation": {}
    },
    {
        "label": "CustomUserCreationForm",
        "kind": 6,
        "importPath": "auth_app.form",
        "description": "auth_app.form",
        "peekOfCode": "class CustomUserCreationForm(UserCreationForm):\n    email = forms.EmailField(\n        max_length=255,\n        help_text='Required. Enter a valid email address.'\n    )\n    password1 = forms.CharField(\n        label=\"Password\",\n        strip=False,\n        widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),\n    )",
        "detail": "auth_app.form",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "auth_app.urls",
        "description": "auth_app.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.register, name='register'),\n    path('login/', views.login1, name='login'),\n    path('logout/', views.logout1, name='logout'),\n]",
        "detail": "auth_app.urls",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "auth_app.views",
        "description": "auth_app.views",
        "peekOfCode": "def register(request):\n    if request.method == 'POST':\n        username = request.POST['username']\n        email = request.POST['email']\n        password = request.POST['password']\n       # Vérifier que le nom d'utilisateur n'est pas déjà utilisé\n        if User.objects.filter(username=username).exists():\n            messages.error(request, 'Ce nom d\\'utilisateur est déjà utiliser.')\n            return redirect('login/')  # Remplacez 'registration/register.html' par votre propre modèle de formulaire d'inscription\n        if User.objects.filter(email=email).exists():",
        "detail": "auth_app.views",
        "documentation": {}
    },
    {
        "label": "login1",
        "kind": 2,
        "importPath": "auth_app.views",
        "description": "auth_app.views",
        "peekOfCode": "def login1(request):\n    if request.method == 'POST':\n        username = request.POST['username']\n        password = request.POST['password']\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect('home')\n        else:\n            messages.error(request, 'email ou mot de passe incorrect.')",
        "detail": "auth_app.views",
        "documentation": {}
    },
    {
        "label": "logout1",
        "kind": 2,
        "importPath": "auth_app.views",
        "description": "auth_app.views",
        "peekOfCode": "def logout1(request):\n    logout(request)\n    return redirect('login')",
        "detail": "auth_app.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog_app.migrations.0001_initial",
        "description": "blog_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tag',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "blog_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "BlogAppConfig",
        "kind": 6,
        "importPath": "blog_app.apps",
        "description": "blog_app.apps",
        "peekOfCode": "class BlogAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'blog_app'",
        "detail": "blog_app.apps",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "blog_app.models",
        "description": "blog_app.models",
        "peekOfCode": "class Tag(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name\nclass Blog(models.Model):\n    title = models.CharField(max_length=255)\n    content = models.TextField()\n    image = models.ImageField(upload_to='blog_images/', null=True, blank=True)\n    def image_url(self):\n        if self.image:",
        "detail": "blog_app.models",
        "documentation": {}
    },
    {
        "label": "Blog",
        "kind": 6,
        "importPath": "blog_app.models",
        "description": "blog_app.models",
        "peekOfCode": "class Blog(models.Model):\n    title = models.CharField(max_length=255)\n    content = models.TextField()\n    image = models.ImageField(upload_to='blog_images/', null=True, blank=True)\n    def image_url(self):\n        if self.image:\n            return self.image.url\n        return ''\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    tags = models.ManyToManyField(Tag)",
        "detail": "blog_app.models",
        "documentation": {}
    },
    {
        "label": "Like",
        "kind": 6,
        "importPath": "blog_app.models",
        "description": "blog_app.models",
        "peekOfCode": "class Like(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)\n    def save(self, *args, **kwargs):\n        super(Like, self).save(*args, **kwargs)\n        self.blog.likes = Like.objects.filter(blog=self.blog).count()\n        self.blog.save()\n    def delete(self, *args, **kwargs):\n        super(Like, self).delete(*args, **kwargs)\n        self.blog.likes = Like.objects.filter(blog=self.blog).count()",
        "detail": "blog_app.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "blog_app.models",
        "description": "blog_app.models",
        "peekOfCode": "class Comment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)\n    content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    def save(self, *args, **kwargs):\n        super(Comment, self).save(*args, **kwargs)\n        self.blog.comments = Comment.objects.filter(blog=self.blog).count()\n        self.blog.save()\n    def delete(self, *args, **kwargs):",
        "detail": "blog_app.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "blog_app.models",
        "description": "blog_app.models",
        "peekOfCode": "User = get_user_model()\nclass Tag(models.Model):\n    name = models.CharField(max_length=50)\n    def __str__(self):\n        return self.name\nclass Blog(models.Model):\n    title = models.CharField(max_length=255)\n    content = models.TextField()\n    image = models.ImageField(upload_to='blog_images/', null=True, blank=True)\n    def image_url(self):",
        "detail": "blog_app.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "blog_app.urls",
        "description": "blog_app.urls",
        "peekOfCode": "urlpatterns = [\n    path('home/', views.home, name='home'),\n    path('post_detail/', views.post_detail, name='post_detail'),\n    path('new_post/', views.new_post, name='new_post'),\n    path('create/', views.create_blog, name='create_blog'),\n]",
        "detail": "blog_app.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "blog_app.views",
        "description": "blog_app.views",
        "peekOfCode": "def home(request):\n    blogs = Blog.objects.all()\n    return render(request, 'home.html', {'blogs': blogs})\n@login_required\ndef post_detail(request):\n    return render(request, 'post_detail.html')\n@login_required\ndef new_post(request):\n    return render(request, 'new_post.html')\ndef create_blog(request):",
        "detail": "blog_app.views",
        "documentation": {}
    },
    {
        "label": "post_detail",
        "kind": 2,
        "importPath": "blog_app.views",
        "description": "blog_app.views",
        "peekOfCode": "def post_detail(request):\n    return render(request, 'post_detail.html')\n@login_required\ndef new_post(request):\n    return render(request, 'new_post.html')\ndef create_blog(request):\n    if request.method == 'POST':\n        title = request.POST.get('title')\n        content = request.POST.get('content')\n        image = request.FILES.get('image')",
        "detail": "blog_app.views",
        "documentation": {}
    },
    {
        "label": "new_post",
        "kind": 2,
        "importPath": "blog_app.views",
        "description": "blog_app.views",
        "peekOfCode": "def new_post(request):\n    return render(request, 'new_post.html')\ndef create_blog(request):\n    if request.method == 'POST':\n        title = request.POST.get('title')\n        content = request.POST.get('content')\n        image = request.FILES.get('image')\n        user = request.user\n        blog = Blog(title=title, content=content, image=image, user=user)\n        blog.save()",
        "detail": "blog_app.views",
        "documentation": {}
    },
    {
        "label": "create_blog",
        "kind": 2,
        "importPath": "blog_app.views",
        "description": "blog_app.views",
        "peekOfCode": "def create_blog(request):\n    if request.method == 'POST':\n        title = request.POST.get('title')\n        content = request.POST.get('content')\n        image = request.FILES.get('image')\n        user = request.user\n        blog = Blog(title=title, content=content, image=image, user=user)\n        blog.save()\n        return redirect('home') \n    return render(request, 'new_post.html')",
        "detail": "blog_app.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'AppBlog.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]